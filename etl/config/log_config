#These are the loggers that are available from the code
#Each logger requires a handler, but can have more than one
[loggers]
keys=root, decorate, etl_to_pg, processes, state


#Each handler requires a single formatter
[handlers]
keys=fileHandler, consoleHandler


[formatters]
keys=logFormatter, consoleFormatter


[logger_root]
level=DEBUG
handlers=consoleHandler


[logger_decorate]
level=DEBUG
handlers=consoleHandler
qualname=decorate
#propagate=0 Does not pass messages to ancestor loggers(root)
propagate=0

[logger_etl_to_pg]
level=WARNING
handlers=consoleHandler
qualname=etl_to_pg
propagate=0

[logger_processes]
level=DEBUG
handlers=consoleHandler
qualname=processes
propagate=0

[logger_state]
level=DEBUG
handlers=consoleHandler
qualname=state
propagate=0

# Do not use a console logger when running scripts from a bat file without a console
# because it hangs!
[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=consoleFormatter
args=(sys.stdout,)# The comma is correct, because the parser is looking for args


[handler_fileHandler]
#class=FileHandler

class=handlers.RotatingFileHandler
level=DEBUG
formatter=logFormatter
args=('message.log','a', 512000, 5)

# This causes a new file to be created for each script
# Change time.strftime("%Y%m%d%H%M%S") to time.strftime("%Y%m%d")
# And only one log per day will be created. All messages will be amended to it.
#logging.handlers.RotatingFileHandler(filename, mode='a', maxBytes=0, backupCount=0, encoding=None, delay=False, errors=None)



[formatter_logFormatter]
format=[%(module)s] [%(asctime)s] [%(levelname)s] => %(message)s
datefmt='%Y-%m-%d %H:%M:%S'


#Use a separate formatter for the console if you want
[formatter_consoleFormatter]
#format=%(asctime)s | %(levelname)-8s | %(filename)s-%(funcName)s-%(lineno)04d | %(message)s

format=[%(module)s] [%(asctime)s] [%(levelname)s] => %(message)s
datefmt='%Y-%m-%d %H:%M:%S'